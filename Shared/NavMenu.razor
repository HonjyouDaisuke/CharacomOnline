@inject ILogger<NavMenu> Logger

<RadzenSidebar @bind-Expanded="@SidebarExpanded">
	<RadzenPanelMenu>
		<RadzenPanelMenuItem Text="Home" Path="/" Icon="home" />
		<RadzenPanelMenuItem Text="ダッシュボード" Path=@("/project-dashboard") Icon="dashboard" />
		<RadzenPanelMenuItem Text="プロジェクト選択" Path=@("/projects") Icon="description" />
		<RadzenPanelMenuItem Text="個別文字選択" Path=@("/chara-data-select") Icon="assignment_turned_in" />
		<RadzenPanelMenuItem Text="Login with Google" Path=@("/logingoogle") Icon="account_box" />
		<RadzenPanelMenuItem Text="Login" Path=@("/login") Icon="open_in_browser" />
		<RadzenPanelMenuItem Text="Test Page" Path=@("/test") Icon="account_box" />
		<RadzenPanelMenuItem Text="CharaData Page" Path=@("/charaimages") Icon="account_box" />
		<RadzenPanelMenuItem Text="Drag and Drop Test" Path=@("/dragdrop") Icon="account_box" />
		<RadzenPanelMenuItem Text="Image Process" Path=@("/image-process") Icon="account_box" />
		<RadzenPanelMenuItem Text="ChartTest" Path=@("/chart") Icon="account_box" />
		<RadzenPanelMenuItem Text="Upload to Supabase" Path=@("/upload") Icon="account_box" />
		<RadzenPanelMenuItem Text="ProgressBar Test" Path=@("/progress") Icon="account_box" />
		<RadzenPanelMenuItem Text="アプリ設定(管理者用)" Path=@("/global-setting") Icon="build" />
		<RadzenPanelMenuItem Text="ユーザ管理(管理者用)" Path=@("/user-manage") Icon="account_box" />
		<RadzenPanelMenuItem Text="boxへログイン" Path=@("/auth") Icon="open_in_browser" />
	</RadzenPanelMenu>
</RadzenSidebar>

@code {
	[Parameter]
	public bool SidebarExpanded { get; set; } = true;

	// バインディングのためのイベントコールバック
	[Parameter]
	public EventCallback<bool> SidebarExpandedChanged { get; set; }

	// RadzenSidebarの状態変更をSidebarExpandedプロパティに反映
	private async Task ToggleSidebar()
	{
		bool newValue = !SidebarExpanded;
		await SidebarExpandedChanged.InvokeAsync(newValue);
	}
}
