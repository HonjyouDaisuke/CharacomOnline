@using CharacomOnline.Components
@using CharacomOnline.Service
@inherits LayoutComponentBase
@inject SessionStorageService SessionStorage
@inject AppState AppState

<PageTitle>CharacomOnline</PageTitle>
<RadzenComponents @rendermode="InteractiveServer" />
<RadzenLayout>
	<MainHeader @bind-SidebarExpanded="parentSidebarExpanded" />
	<NavMenu @bind-SidebarExpanded="parentSidebarExpanded" />
	<!-- NotificationManagerを配置 -->
	<NotificationManager />
	<RadzenBody>
		<div class="rz-p-1">
			@Body
		</div>
	</RadzenBody>
	<RadzenFooter>
		Footer
	</RadzenFooter>
</RadzenLayout>

@code {
	private bool parentSidebarExpanded = true;
	private bool _isLoaded = false;
	protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // SessionStorage から AppState を復元
            var restoredState = await SessionStorage.LoadAppStateAsync();

            // AppState にデータを設定
            AppState.CurrentProjectId = restoredState.CurrentProjectId;
            AppState.UserId = restoredState.UserId;
            AppState.UserName = restoredState.UserName;
            AppState.UserRole = restoredState.UserRole;
            AppState.UserPictureUrl = restoredState.UserPictureUrl;

            _isLoaded = true;

            // 再レンダリングをトリガー
            StateHasChanged();
        }
    }
}
