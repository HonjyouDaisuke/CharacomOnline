@using CharacomOnline.Entity
@using CharacomOnline.ViewModel
@using CharacomOnline.Service.TableService
@using System.Collections

@inject TooltipService tooltipService
@inject UsersViewModel UsersViewModel
@inject NotificationsTableService NotificationsTableService
@inject ILogger<Index> Logger

<RadzenCard>
	<RadzenRow>
		<RadzenColumn Size="2">
			<RadzenText>ユーザ</RadzenText>
		</RadzenColumn>
		<RadzenColumn Size="9">
			@foreach (var data in ProjectUsers){
				<RadzenImage 
				path="@data.PictureUrl" 
				Style="width: 30px; height: 30px;" 
				class="rz-border-radius-2 rz-me-2" 
				MouseEnter="@(args => ShowTooltip(args,data.Name))" 
				/>
			}
		</RadzenColumn>
		<RadzenColumn>
			<RadzenButton Click="OnInvitationClick">招待</RadzenButton>
		</RadzenColumn>
	</RadzenRow>
</RadzenCard>

@code {
	[Parameter]
	public List<ProjectUsers> ProjectUsers { get; set; } = new();

	[Parameter]
	public EventCallback<Guid> InviteUser { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (!firstRender) return;
		await UsersViewModel.FetchAllUsersAsync();
		var users = UsersViewModel.GetAllUserList();
		foreach(var user in users) {
			Logger.LogInformation($"add User = {user.Name}");
		}
	}
	void ShowTooltip(ElementReference elementReference, string tooltipText, TooltipOptions? options = null)
	{
		tooltipService.Open(elementReference, tooltipText, options);
	}

	private async Task OnInvitationClick()
	{
		await NotificationsTableService.AddNotificationAsync("テストだよん", "○○サンによって招待されました。", NotificationType.Message, Guid.Parse("1f3d9184-7d01-411d-a487-5351c61eca73"));
	}
}
