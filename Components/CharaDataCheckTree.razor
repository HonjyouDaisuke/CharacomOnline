@using CharacomOnline.ViewModel
@using CharacomOnline.Entity

@inject CharaDataViewModel charaDataViewModel

<h3>CharaDataCheckTree</h3>
<RadzenDataGrid TItem="CharaDataClass" Data="@charaDataViewModel.CharaDataRepository.Appraisals" SelectionMode="DataGridSelectionMode.Single" AllowGrouping="true">
		<Columns>
			<RadzenDataGridColumn>
				<Template Context="charaData">
					<RadzenCheckBox TValue="bool" Value="@IsRowSelected(charaData)" Change="@((args) => RowSelectionChange(charaData))" Name="Check1" />
				</Template>
			</RadzenDataGridColumn>
			<RadzenDataGridColumn>
				<Template>
					<RadzenImage Path="@context.ImageUrl" AlternateText="Chara Image" width="30" height="30" />
				</Template>
			</RadzenDataGridColumn>
			<RadzenDataGridColumn Property="CharaName" Title="文字種" />
		</Columns>
	</RadzenDataGrid>

@code {
    //[Parameter]
    //public CharaDataViewModel CharaDataView { get; set; } = new CharaDataViewModel();
    
		private IList<CharaDataClass> selectedCharas = new List<CharaDataClass>();
		
		private bool IsRowSelected(CharaDataClass charaData)
		{
			return selectedCharas.Contains(charaData);
		}

		private void RowSelectionChange(CharaDataClass charaData)
		{
			if (selectedCharas.Contains(charaData))
			{
				selectedCharas.Remove(charaData);
			}
			else
			{
				selectedCharas.Add(charaData);
			}
		}
    string GetText(object data)
    {
        return data.ToString();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
}
