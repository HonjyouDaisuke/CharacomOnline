@page "/upload"
@using Google.Apis.Auth.OAuth2
@using Google.Apis.Drive.v3
@using Google.Apis.Services
@using Google.Apis.Util.Store
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Components.Authorization
@inject IHttpContextAccessor HttpContextAccessor
@inject IConfiguration Configuration
@inject NavigationManager Navigation

<h3>Upload to Google Drive</h3>

@if (!isAuthenticated)
{
    <p>You are not authenticated. Please <a @onclick="BeginSignIn">sign in</a>.</p>
}
else
{
    <button @onclick="UploadFile">Upload File</button>
}

@code {
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var user = HttpContextAccessor.HttpContext.User;
        isAuthenticated = user.Identity.IsAuthenticated;
    }

    private void BeginSignIn()
    {
        Navigation.NavigateTo("signin-google", true);
    }

    private async Task UploadFile()
    {
        var user = HttpContextAccessor.HttpContext.User;
        if (user.Identity.IsAuthenticated)
        {
            var accessToken = await HttpContextAccessor.HttpContext.GetTokenAsync("access_token");
            var credential = GoogleCredential.FromAccessToken(accessToken);

            var service = new DriveService(new BaseClientService.Initializer()
            {
                HttpClientInitializer = credential,
                ApplicationName = "Drive API .NET Quickstart",
            });

            var fileMetadata = new Google.Apis.Drive.v3.Data.File()
            {
                Name = "photo.jpg"
            };
            FilesResource.CreateMediaUpload request;
            using (var stream = new FileStream("wwwroot/photo.jpg", FileMode.Open))
            {
                request = service.Files.Create(
                    fileMetadata, stream, "image/jpeg");
                request.Fields = "id";
                await request.UploadAsync();
            }
            var file = request.ResponseBody;
            Console.WriteLine("File ID: " + file.Id);
        }
    }
}