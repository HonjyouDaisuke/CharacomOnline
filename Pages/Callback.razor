@page "/callback"
@using Blazored.LocalStorage
@inject IJSRuntime JSRuntime
@inject Supabase.Client SupabaseClient
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>ログイン処理中...</h3>

@code {
    private bool isRendered = false; // 初期レンダリングを追跡するフラグ

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                // JavaScriptでURLのハッシュ部分を取得
                var hash = await JSRuntime.InvokeAsync<string>("eval", "window.location.hash");

                // ハッシュ部分がある場合はアクセストークンを解析
                if (!string.IsNullOrEmpty(hash))
                {
                    var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(hash.TrimStart('#'));

                    var accessToken = queryParams["access_token"].FirstOrDefault();
                    var refreshToken = queryParams["refresh_token"].FirstOrDefault();

                    if (!string.IsNullOrEmpty(accessToken) && !string.IsNullOrEmpty(refreshToken))
                    {
                        // ローカルストレージにトークンを保存
                        await localStorage.SetItemAsync("access_token", accessToken);
                        await localStorage.SetItemAsync("refresh_token", refreshToken);

                        // Supabaseのセッションを取得
                        var session = await SupabaseClient.Auth.GetSessionFromUrl(new Uri(NavigationManager.Uri));

                        // セッションが有効なら、ホームページにリダイレクト
                        if (session != null)
                        {
                            NavigationManager.NavigateTo("/");
                        }
                        else
                        {
                            NavigationManager.NavigateTo("/login");
                        }
                    }
                    else
                    {
                        Console.WriteLine("アクセストークンまたはリフレッシュトークンが不足しています。");
                        NavigationManager.NavigateTo("/login");
                    }
                }
                else
                {
                    Console.WriteLine("アクセストークンが見つかりません。");
                    NavigationManager.NavigateTo("/login");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"認証処理中にエラーが発生しました: {ex.Message}");
                NavigationManager.NavigateTo("/login");
            }

            // 1度レンダリングした後に再レンダリングを防ぐためフラグを設定
            isRendered = true;
        }
    }
}
